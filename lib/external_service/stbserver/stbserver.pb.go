// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: stbserver.proto

package stbserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xaxis    int64       `protobuf:"varint,1,opt,name=xaxis,proto3" json:"xaxis,omitempty"`
	Yaxis    int64       `protobuf:"varint,2,opt,name=yaxis,proto3" json:"yaxis,omitempty"`
	Zaxis    int64       `protobuf:"varint,3,opt,name=zaxis,proto3" json:"zaxis,omitempty"`
	Area     string      `protobuf:"bytes,4,opt,name=area,proto3" json:"area,omitempty"`
	Name     string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Skill    []*Skill    `protobuf:"bytes,6,rep,name=skill,proto3" json:"skill,omitempty"`
	Summoner []*Summoner `protobuf:"bytes,7,rep,name=summoner,proto3" json:"summoner,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{0}
}

func (x *Character) GetXaxis() int64 {
	if x != nil {
		return x.Xaxis
	}
	return 0
}

func (x *Character) GetYaxis() int64 {
	if x != nil {
		return x.Yaxis
	}
	return 0
}

func (x *Character) GetZaxis() int64 {
	if x != nil {
		return x.Zaxis
	}
	return 0
}

func (x *Character) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetSkill() []*Skill {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *Character) GetSummoner() []*Summoner {
	if x != nil {
		return x.Summoner
	}
	return nil
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinary float64 `protobuf:"fixed64,1,opt,name=ordinary,proto3" json:"ordinary,omitempty"`
	Qkill    string  `protobuf:"bytes,2,opt,name=qkill,proto3" json:"qkill,omitempty"`
	Wkill    string  `protobuf:"bytes,3,opt,name=wkill,proto3" json:"wkill,omitempty"`
	Ekill    string  `protobuf:"bytes,4,opt,name=ekill,proto3" json:"ekill,omitempty"`
	Rkill    string  `protobuf:"bytes,5,opt,name=rkill,proto3" json:"rkill,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{1}
}

func (x *Skill) GetOrdinary() float64 {
	if x != nil {
		return x.Ordinary
	}
	return 0
}

func (x *Skill) GetQkill() string {
	if x != nil {
		return x.Qkill
	}
	return ""
}

func (x *Skill) GetWkill() string {
	if x != nil {
		return x.Wkill
	}
	return ""
}

func (x *Skill) GetEkill() string {
	if x != nil {
		return x.Ekill
	}
	return ""
}

func (x *Skill) GetRkill() string {
	if x != nil {
		return x.Rkill
	}
	return ""
}

type Summoner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dkill string `protobuf:"bytes,1,opt,name=dkill,proto3" json:"dkill,omitempty"`
	Fkill string `protobuf:"bytes,2,opt,name=fkill,proto3" json:"fkill,omitempty"`
}

func (x *Summoner) Reset() {
	*x = Summoner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Summoner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summoner) ProtoMessage() {}

func (x *Summoner) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summoner.ProtoReflect.Descriptor instead.
func (*Summoner) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{2}
}

func (x *Summoner) GetDkill() string {
	if x != nil {
		return x.Dkill
	}
	return ""
}

func (x *Summoner) GetFkill() string {
	if x != nil {
		return x.Fkill
	}
	return ""
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idcard string `protobuf:"bytes,1,opt,name=idcard,proto3" json:"idcard,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{3}
}

func (x *Identity) GetIdcard() string {
	if x != nil {
		return x.Idcard
	}
	return ""
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FileMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileType  string `protobuf:"bytes,2,opt,name=fileType,proto3" json:"fileType,omitempty"`
	FileData  []byte `protobuf:"bytes,3,opt,name=fileData,proto3" json:"fileData,omitempty"`
	IsCarry   bool   `protobuf:"varint,4,opt,name=isCarry,proto3" json:"isCarry,omitempty"`
	IsStart   bool   `protobuf:"varint,5,opt,name=isStart,proto3" json:"isStart,omitempty"`
	User      string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	TotalSize int64  `protobuf:"varint,7,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
}

func (x *FileMessage) Reset() {
	*x = FileMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMessage) ProtoMessage() {}

func (x *FileMessage) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMessage.ProtoReflect.Descriptor instead.
func (*FileMessage) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{4}
}

func (x *FileMessage) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMessage) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileMessage) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *FileMessage) GetIsCarry() bool {
	if x != nil {
		return x.IsCarry
	}
	return false
}

func (x *FileMessage) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

func (x *FileMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *FileMessage) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type FileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenumber int64 `protobuf:"varint,1,opt,name=filenumber,proto3" json:"filenumber,omitempty"`
	Iscarry    bool  `protobuf:"varint,2,opt,name=iscarry,proto3" json:"iscarry,omitempty"`
}

func (x *FileResult) Reset() {
	*x = FileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResult) ProtoMessage() {}

func (x *FileResult) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResult.ProtoReflect.Descriptor instead.
func (*FileResult) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{5}
}

func (x *FileResult) GetFilenumber() int64 {
	if x != nil {
		return x.Filenumber
	}
	return 0
}

func (x *FileResult) GetIscarry() bool {
	if x != nil {
		return x.Iscarry
	}
	return false
}

type Heart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Heart) Reset() {
	*x = Heart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heart) ProtoMessage() {}

func (x *Heart) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heart.ProtoReflect.Descriptor instead.
func (*Heart) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{6}
}

func (x *Heart) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stbserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_stbserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_stbserver_proto_rawDescGZIP(), []int{7}
}

func (x *Result) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_stbserver_proto protoreflect.FileDescriptor

var file_stbserver_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x78, 0x61,
	0x78, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x78, 0x61, 0x78, 0x69, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x79, 0x61, 0x78, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x79, 0x61, 0x78, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x61, 0x78, 0x69, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x7a, 0x61, 0x78, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x08,
	0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x65, 0x72, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x22, 0x7b, 0x0a,
	0x05, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x36, 0x0a, 0x08, 0x53, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6b, 0x69,
	0x6c, 0x6c, 0x22, 0x36, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x72, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x43, 0x61, 0x72, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x63, 0x61, 0x72, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x63, 0x61, 0x72, 0x72, 0x79, 0x22, 0x17, 0x0a, 0x05,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xd1, 0x03, 0x0a, 0x09, 0x53, 0x74,
	0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x73, 0x74, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a,
	0x14, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x73, 0x74, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a,
	0x14, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x12, 0x43, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x13, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44,
	0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x42, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x15, 0x2e, 0x73,
	0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x28, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x28, 0x01, 0x42, 0x2b, 0x5a,
	0x29, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x3b, 0x73, 0x74, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_stbserver_proto_rawDescOnce sync.Once
	file_stbserver_proto_rawDescData = file_stbserver_proto_rawDesc
)

func file_stbserver_proto_rawDescGZIP() []byte {
	file_stbserver_proto_rawDescOnce.Do(func() {
		file_stbserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_stbserver_proto_rawDescData)
	})
	return file_stbserver_proto_rawDescData
}

var file_stbserver_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stbserver_proto_goTypes = []interface{}{
	(*Character)(nil),   // 0: stbserver.Character
	(*Skill)(nil),       // 1: stbserver.Skill
	(*Summoner)(nil),    // 2: stbserver.Summoner
	(*Identity)(nil),    // 3: stbserver.Identity
	(*FileMessage)(nil), // 4: stbserver.FileMessage
	(*FileResult)(nil),  // 5: stbserver.FileResult
	(*Heart)(nil),       // 6: stbserver.Heart
	(*Result)(nil),      // 7: stbserver.Result
}
var file_stbserver_proto_depIdxs = []int32{
	1, // 0: stbserver.Character.skill:type_name -> stbserver.Skill
	2, // 1: stbserver.Character.summoner:type_name -> stbserver.Summoner
	3, // 2: stbserver.StbServer.GetSummonerInfo:input_type -> stbserver.Identity
	3, // 3: stbserver.StbServer.PutSummonerInfo:input_type -> stbserver.Identity
	3, // 4: stbserver.StbServer.GetAllSummonerInfo:input_type -> stbserver.Identity
	3, // 5: stbserver.StbServer.ShareSummonerInfo:input_type -> stbserver.Identity
	4, // 6: stbserver.StbServer.SendFile:input_type -> stbserver.FileMessage
	4, // 7: stbserver.StbServer.SendGroupFile:input_type -> stbserver.FileMessage
	6, // 8: stbserver.StbServer.HeartBeat:input_type -> stbserver.Heart
	0, // 9: stbserver.StbServer.GetSummonerInfo:output_type -> stbserver.Character
	0, // 10: stbserver.StbServer.PutSummonerInfo:output_type -> stbserver.Character
	0, // 11: stbserver.StbServer.GetAllSummonerInfo:output_type -> stbserver.Character
	0, // 12: stbserver.StbServer.ShareSummonerInfo:output_type -> stbserver.Character
	5, // 13: stbserver.StbServer.SendFile:output_type -> stbserver.FileResult
	5, // 14: stbserver.StbServer.SendGroupFile:output_type -> stbserver.FileResult
	7, // 15: stbserver.StbServer.HeartBeat:output_type -> stbserver.Result
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_stbserver_proto_init() }
func file_stbserver_proto_init() {
	if File_stbserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stbserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Summoner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stbserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stbserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stbserver_proto_goTypes,
		DependencyIndexes: file_stbserver_proto_depIdxs,
		MessageInfos:      file_stbserver_proto_msgTypes,
	}.Build()
	File_stbserver_proto = out.File
	file_stbserver_proto_rawDesc = nil
	file_stbserver_proto_goTypes = nil
	file_stbserver_proto_depIdxs = nil
}
